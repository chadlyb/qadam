name: Create Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string
      prerelease:
        description: 'Is this a prerelease?'
        required: false
        default: false
        type: boolean

env:
  GO_VERSION: '1.23.x'

jobs:
  build:
    name: Build for ${{ matrix.goos }}-${{ matrix.goarch }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            ext: ""
          - goos: windows
            goarch: amd64
            ext: ".exe"
          - goos: darwin
            goarch: amd64
            ext: ""

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Build extract tool
        run: |
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build \
            -ldflags="-s -w -X main.version=${{ github.event.inputs.version }}" \
            -o extract${{ matrix.ext }} \
            ./cmd/extract

      - name: Build build tool
        run: |
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build \
            -ldflags="-s -w -X main.version=${{ github.event.inputs.version }}" \
            -o build${{ matrix.ext }} \
            ./cmd/build

      - name: Create release directory
        run: |
          mkdir -p release
          cp extract${{ matrix.ext }} release/
          cp build${{ matrix.ext }} release/
          cp README.md release/

      - name: Create archive
        run: |
          cd release
          if [ "${{ matrix.goos }}" = "windows" ]; then
            # Use zip for Windows (available on Ubuntu)
            zip -r ../qadam-${{ github.event.inputs.version }}-${{ matrix.goos }}-${{ matrix.goarch }}.zip *
          else
            # Use tar.gz for Unix-like systems
            tar -czf ../qadam-${{ github.event.inputs.version }}-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz *
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: qadam-${{ matrix.goos }}-${{ matrix.goarch }}
          path: |
            qadam-${{ github.event.inputs.version }}-${{ matrix.goos }}-${{ matrix.goarch }}.*
          retention-days: 30

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.version }}
          name: Release ${{ github.event.inputs.version }}
          body: |
            ## QADAM Tools ${{ github.event.inputs.version }}
            
            ### Downloads
            - **Windows (x64)**: `qadam-${{ github.event.inputs.version }}-windows-amd64.zip`
            - **Linux (x64)**: `qadam-${{ github.event.inputs.version }}-linux-amd64.tar.gz`
            - **macOS (x64)**: `qadam-${{ github.event.inputs.version }}-darwin-amd64.tar.gz`
            
            ### Tools Included
            - **extract**: Extract strings and resources from QADAM game files
            - **build**: Build and patch QADAM game files
            
            ### Usage
            See README.md for detailed usage instructions.
          files: |
            artifacts/*/qadam-${{ github.event.inputs.version }}-*.zip
            artifacts/*/qadam-${{ github.event.inputs.version }}-*.tar.gz
          prerelease: ${{ github.event.inputs.prerelease }}
          draft: false 